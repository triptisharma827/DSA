59. Spiral Matrix II
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20


class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
     vector<vector<int>>arr(n, vector<int> (n));
        int top=0;
        int bottom=(n)-1;
        int left=0;
        int right=n-1;
        int dir=0;
        int k=1;
        while(top<=bottom && left<=right && k<=(n*n)){
            if(dir==0){
                for(int i=left;i<=right;i++){
                    arr[top][i]=k;
                    
                    k++;
                }
                top=top+1;
            }
            if(dir==1){
                for(int i=top;i<=bottom;i++){
                    arr[i][right]=k;
                    k++;
                }
                right=right-1;
            }
            if(dir==2){
                for(int i=right;i>=left;i--){
                    arr[bottom][i]=k;
                    k++;
                }
                bottom=bottom-1;
            }
            if(dir==3){
                for(int i=bottom;i>=top;i--){
                    arr[i][left]=k;
                    k++;
                }
                left +=1;
                
            }

            dir=(dir+1)%4;
        }
         return arr;
    }
};
